% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{df_2}
\alias{df_2}
\title{Estimate \eqn{\mathrm{df}^2(c)}}
\arguments{
\item{df_grid}{A \code{numeric} vector containing the candidate degrees of freedom for smoothing splines. Missing values are allowed.}

\item{cv}{A \code{numeric} vector contaning cross-validation values for various smoothing splines fit associated with the degrees of freedom found in \code{df_grid}. Missing values are allowed.}

\item{df_0}{A \code{double} between 2 and the maximum value of \code{df_grid} representing the traditional optimal degrees of freedom. This is typically the minimized of the cross-validation curve.}

\item{D}{A positive \code{double} representing the largest allowable angle of the slopes of the cross-validation curve.}

\item{tol}{A non-negative \code{double} representing the maximum allowable difference between the angle of each slope of the cross-validation curve and \code{D}.}

\item{silence}{A \code{logical} value. If set to \code{TRUE}, informative messages are printed to the console regarding the iterative process of choosing \eqn{\mathrm{df}^2(c)}.}
}
\value{
A \code{double} representing the resulting value of \eqn{\mathrm{df}^2(c)}.
}
\description{
Estimate a more conservative degrees of freedom, \eqn{\mathrm{df}^2(c)}, through an iterative process: starting from the degress of freedom immediately to the left of \eqn{\mathrm{df}^0(c)} on the degrees of freedom grid, \code{df_grid}, we examine its associated angle. If this angle does not exceed the threshold, \code{D}, we proceed to the next closest degrees of freedom and evaluate its angle. This process is repeated, moving leftward along the grid, until we identify the first angle that surpasses the threshold. The value of \eqn{\mathrm{df}^2(c)} is then assigned as the degrees of freedom corresponding to the position immediately preceding the one where the angle first exceeded \code{D}.
}
\details{
Estimate \eqn{\mathrm{df}^2(c)}

Caution is required. With a limited length of \code{df_grid}, it is possible that no angle fall below \code{D}. Even if the length of \code{df_grid}, it is not assured that there exists a cross-validation curve slope smaller than \code{D}. Therefore, ensuring that that \code{D} is not set too low, will increase the likelihood of obtaining a meaningful value of \eqn{\mathrm{df}^2(c)}. If the iterative process fail to find a suitable value of \eqn{\mathrm{df}^2(c)}, the input value of \code{df_0} will be returned.
}
\examples{
\dontrun{

  # Generate some fictional data
  test_df_grid <- seq(from = 2, to = 12, length.out = 100)
  test_cv <- 0.5 + 0.2 * (df_grid - 5)**2
  test_df_0 <- 5

  # Using D = 2.5
  df_2(test_df_grid, test_cv, test_df_0, D = 2.5, tol = 0)
  df_2(test_df_grid, test_cv, test_df_0, D = 2.5, tol = 1/4)

  # Using D = 5.0
  df_2(test_df_grid, test_cv, test_df_0, D = 5, tol = 0)
  df_2(test_df_grid, test_cv, test_df_0, D = 5, tol = 1/2)

}
}
