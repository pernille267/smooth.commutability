% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{brent_min}
\alias{brent_min}
\title{Obtain the value of \code{x} so that \code{f(x)} is a local minimum}
\arguments{
\item{f}{A \code{function}. Must be defined and continuous in the domain \code{[a, b]}. If the function have more than 1 argument, ensure that these are fixed.}

\item{a}{A \code{double}. The lower bound for the search interval.}

\item{b}{A \code{double}. The upper bound for the search interval.}

\item{tol}{A \code{double}. The desired accuracy.}

\item{max_iter}{An \code{integer}. The maximum number of iteration that should be performed before the algorithm forces to quit.}
}
\value{
A \code{double} that signify the value of \code{x} that results in local minimum of \code{f}.
}
\description{
Numerical Minimization Using Brent's Algorithm
}
\details{
Given a particular function \code{f}, obtains a local minimum of \code{f} in the domain \code{[a, b]}. Brent's algorithm uses a combination of golden section search and quadratic interpolation to obtain the minimum.
}
\examples{
example_fun <- function(x, a = 3){return((x - a)^2)}
the_minimum <- brent_min(f = function(x) example_fun(x, 3), a = -3, b = 6)

# Expected to be approximately '3'
print(the_minimum)

# The value of f at the minimum
print(example_fun(the_minimum))
}
