% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{resample_fun_samples2_all}
\alias{resample_fun_samples2_all}
\title{Resample cluster statistics based on EQA clinical sample data for each IVD-MD comparison}
\arguments{
\item{data}{A \code{list} or a \code{data.table}. The mean-of-replicates
clinical sample data. Must contain \code{comparison} \code{SampleID},
\code{MP_A} and \code{MP_B}. The ID variables \code{comparison}
and \code{SampleID} must be \code{character}.}

\item{weight_data}{A \code{list} or a \code{data.table}. The weight data based
on the clinical sample data. Must contain \code{comparison} \code{SampleID},
\code{MP_A} and \code{MP_B}.The ID variables \code{comparison}
and \code{SampleID} must be \code{character}.}
}
\value{
A \code{list} of length two containing the resampled cluster statistics based on
\code{data} and \code{weight_data}. The output \code{list} have the following structure:
\itemize{
  \item \code{resampled_cs_data}: Contains the resampled \code{data}
  \item \code{resampled_weight_data}: Contains the resampled \code{weight_data}
}
}
\description{
Resample cluster statistics based on EQA clinical sample data for each IVD-MD comparison
}
\details{
This function is a very efficient method to resample aggregated sample statistics
based on clinical sample data grouped by IVD-MD \code{comparison}.

It is convenient to combine this function with \code{smooth.commutability} functions such as
\itemize{
  \item \code{predict_smoothing_splines()} to estimate inside rates for each IVD-MD comparison
  \item \code{smoothing_spline()} to estimate bootstrap distribution of LOO-CV chosen effective degrees of freedom.
}
If you do not have weight data available that you seek to resample jointly,
just pass \code{data} as both first and second argument. See example.
}
\examples{
library(data.table)
fictive_data1 <- simulate_eqa_data2(list(n = 25, R = 3, cvx = 0.01, cvy = 0.02))
fictive_data2 <- simulate_eqa_data2(list(n = 25, R = 3, cvx = 0.03, cvy = 0.02))
fictive_data1$comparison <- rep("A - B", length(fictive_data1$MP_B))
fictive_data2$comparison <- rep("A - C", length(fictive_data2$MP_B))
fictive_data <- rbindlist(list(fictive_data1, fictive_data2))
resampled_data <- resample_fun_samples2_all(fictive_data, fictive_data)
setDT(resampled_data)
print(resampled_data)
}
